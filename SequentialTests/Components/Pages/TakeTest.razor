@using SequentialTests.Data
@using SequentialTests.Models
@inject ISessionRepository SessionRepository
@inject NavigationManager NavigationManager

<div class="card my-3 p-3">
    <h3>@test.Name</h3>

    <EditForm Model="TestFormModel" OnSubmit="Submit" FormName="TestForm">
        @for (int i = 0; i < 6; i++)
        {
            var question = @TestFormModel.Questions[i];
            <label>@TestFormModel.SortOrders[i] <b>@TestFormModel.Tasks[i]</b> @TestFormModel.Questions[i]</label>
            <InputText hidden @bind-Value="@TestFormModel.Questions[i]" />

            @if (TestFormModel.IsTrueFalseAnswer[i] == true)
            {
                <InputCheckbox @bind-Value="@TestFormModel.BoolAnswers[i]" class="mx-3" />
            }
            @if (TestFormModel.IsTrueFalseAnswer[i] == false)
            {
                <InputNumber @bind-Value="@TestFormModel.IntAnswers[i]" class="mx-3" />
            }
            <br />
        }
        <div>
            <button type="submit">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public TestModel? TestFormModel { get; set; }

    public Test test = new Test();
    public List<TestItem> testItems = new List<TestItem>();

    public List<TestResultDto> testResults = new List<TestResultDto>();

    public Guid targetId { get; set; } = new Guid("839C1D11-5DC5-48FC-B203-7E2F1566D861");

    protected override async Task OnInitializedAsync()
    {
        if (TestFormModel == null || TestFormModel.Questions.Length == 0)
        {
            TestFormModel = new TestModel();
            test = await SessionRepository.GetTestById(targetId);
            TestFormModel = await SessionRepository.PopulateTestModel(targetId);
        }
    }

    private async Task Submit()
    {
        if (TestFormModel != null)
        {
            var testId = new Guid("839C1D11-5DC5-48FC-B203-7E2F1566D861");
            TestInstance testInstance = await SessionRepository.CreateResultTestInstance(test);

            // Why has user input into the form been lost?  reiniitializing, not proper binding???
            await SessionRepository.SetTestResults(TestFormModel, testInstance.Id, test.Id);

            NavigationManager.NavigateTo("/latest-result/" + testInstance.Id);
        }
    }
}
